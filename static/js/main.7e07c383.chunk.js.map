{"version":3,"sources":["useFetch.js","barChart.js","Slider.js","rightBar.js","OpenSpaceAccessMap.js","Legend.js","App.js","reducers/reducer.js","index.js"],"names":["useFetch","query","useState","status","setStatus","data","setData","useEffect","a","fetch","encodeURIComponent","response","json","rows","sort","b","district","fetchData","BarChart","distance","myQuery","buildQuery","chartData","labels","map","elm","datasets","label","percentage","backgroundColor","borderColor","borderWidth","options","indexAxis","maintainAspectRatio","elements","bar","responsive","plugins","legend","position","display","title","text","style","height","useStyles","makeStyles","theme","root","width","spacing","margin","DistanceSlider","withStyles","color","thumb","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","classes","useSelector","state","dispatch","useDispatch","className","Typography","gutterBottom","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","e","val","type","updateDistance","RightBar","fontFamily","fontSize","INITIAL_VIEW_STATE","latitude","longitude","zoom","setDefaultCredentials","username","apiKey","POLYGON_COLORS","COLOR_YES","COLOR_NO","COLOR_GREEN","OpenSpaceAccessMap","SQL_POLY","layerMesh","CartoSQLLayer","id","getFillColor","object","properties","has_access","getLineColor","lineWidthMinPixels","pickable","layerDistrict","layerOpenSpace","initialViewState","getTooltip","dwelling","density","html","controller","layers","reuseMaps","mapStyle","BASEMAP","POSITRON","mapboxApiAccessToken","preventStyleDiffing","Legend","join","App","initialState","store","createStore","currentState","action","ReactDOM","render","document","getElementById"],"mappings":"8RA0BeA,EAvBE,SAACC,GAAW,IAAD,EACIC,mBAAS,QADb,mBACjBC,EADiB,KACTC,EADS,OAEAF,mBAAS,IAFT,mBAEjBG,EAFiB,KAEXC,EAFW,KAoBxB,OAhBAC,qBAAU,WACDN,GAEU,uCAAG,8BAAAO,EAAA,6DACdJ,EAAU,YADI,SAESK,MAAM,4CAAD,OACoBC,mBAAmBT,KAHrD,cAERU,EAFQ,gBAKKA,EAASC,OALd,OAKRP,EALQ,OAMdC,EAAQD,EAAKQ,KAAKC,MAAK,SAACN,EAAEO,GAAH,OAAOP,EAAEQ,SAASD,EAAEC,SAAS,GAAG,MACvDZ,EAAU,WAPI,2CAAH,oDAUfa,KACD,CAAChB,IAEG,CAAEE,SAAQE,S,iBCsFNa,EA5EE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAETC,EAzBS,SAACD,GAChB,MAAM,4KAAN,OAGwFA,EAHxF,oKAwBgBE,CAAWF,GAFE,EAGNnB,EAASoB,GAAjBf,GAHc,EAGtBF,OAHsB,EAGdE,MASTiB,EAAY,CACdC,OAASlB,EAAKmB,KAAI,SAACC,GAAD,OAAQA,EAAIT,YAC9BU,SAAU,CACN,CACIC,MAAO,IACPtB,KAAKA,EAAKmB,KAAI,SAACC,GAAD,OAAQA,EAAIG,cAC1BC,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BAEJC,YAAa,CACT,oBACA,oBACA,oBACA,oBACA,qBAEJC,YAAa,KAMnBC,EAAU,CAERC,UAAW,IACXC,qBAAqB,EAGrBC,SAAU,CACRC,IAAK,CACHL,YAAa,IAGjBM,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNC,SAAU,QACVC,SAAS,GAEXC,MAAO,CACLD,SAAS,EACTE,KAAK,GAAD,OAAIxB,EAAJ,mCAOhB,OACI,qBAAKyB,MAAS,CAACC,OAAO,SAAtB,SACA,cAAC,IAAD,CAAKxC,KAAQiB,EAAWU,QAAUA,O,4CCzFpCc,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,IAAyB,EAAnBF,EAAMG,QAAQ,IAI7BC,OAAQ,CACNP,OAAQG,EAAMG,QAAQ,SAqB1B,IAAME,EAAiBC,YAAW,CAChCL,KAAM,CACJM,MAAO,UACPV,OAAQ,GAGVW,MAAO,CACLX,OAAQ,GACRK,MAAO,GACPrB,gBAAiB,OACjB4B,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLnB,OAAQ,EACRoB,aAAc,GAEhBC,KAAM,CACJrB,OAAQ,EACRoB,aAAc,IA3BKX,CA6BpBa,KAGY,SAASC,IACtB,IAAMC,EAAUvB,IACV3B,EAAWmD,aAAY,SAAAC,GAAK,OAAIA,EAAMpD,YACtCqD,EAAWC,cAWjB,OAEE,sBAAKC,UAAWL,EAAQpB,KAAxB,UAGE,cAAC0B,EAAA,EAAD,CAAYC,cAAY,EAAxB,6BACA,cAACvB,EAAD,CAAgBwB,kBAAkB,OAAOC,aAAW,kBACpDC,aAAc5D,EAAU6D,IAAM,IAAKC,IAAM,IAAMC,KAAQ,IAAMC,SAAU,SAACC,EAAEC,GAAH,OAjBpD,SAACD,EAAGC,GAEvB,OAAOb,EACH,CACIc,KAAM,YACNnE,SAAUkE,IAYgEE,CAAeH,EAAEC,SCjFzG,IAmCeG,EAnCE,WAGb,IAAMrE,EAAWmD,aAAY,SAAAC,GAAK,OAAIA,EAAMpD,YAC3BsD,cAUjB,OACI,sBAAKC,UAAU,iBAAiB9B,MAAQ,CAAC6C,WAAW,sBAApD,UAEI,cAACrB,EAAD,IAEA,mDAAsBjD,EAAtB,4CAEA,cAAC,EAAD,CAAUA,SAAWA,IACrB,8BACI,sBAAMyB,MAAQ,CAAC8C,SAAS,OAAxB,6D,6CC3BVC,EAAqB,CACvBC,UAAW,UACXC,UAAW,WACXC,KAAK,IAGTC,YAAsB,CACtBC,SAAU,YACVC,OAAQ,2BAGR,IAEaC,EAAgB,CACzBC,UAAW,CAAC,EAAE,EAAE,EAAE,GAClBC,SAAU,CAAC,IAAI,GAAG,IAClBC,YAAa,CAAC,GAAG,IAAI,MA0FRC,EAvFU,SAAC,GAAe,IAAdnF,EAAa,EAAbA,SAEnBoF,EAAQ,oIAIKpF,EAJL,oMAaRqF,EAAY,IAAIC,IAAc,CAClCC,GAAG,YACHrG,KAAMkG,EAENI,aAAc,SAAAC,GAAM,MAAmC,QAA/BA,EAAOC,WAAWC,WAAmBZ,EAAeC,UAAWD,EAAeE,UACtGW,aAAc,CAAC,EAAG,EAAG,EAAG,GACxBC,mBAAoB,EACpBC,UAAU,IAINC,EAAgB,IAAIT,IAAc,CACtCC,GAAG,WACHrG,KAAK,2EAELsG,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBI,aAAc,CAAC,GAAG,GAAG,GAAG,KACxBC,mBAAoB,IACpBC,UAAU,IAINE,EAAiB,IAAIV,IAAc,CACvCC,GAAG,YACHrG,KAAK,8DAELsG,aAAaT,EAAeG,YAC5BU,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,mBAAoB,EACpBC,UAAU,IAoBZ,OACE,8BAEE,cAAC,IAAD,CACE/D,MAAM,OACNL,OAAO,OACPuE,iBAAkBzB,EAClB0B,WAvBa,SAAC,GAAc,IAAbT,EAAY,EAAZA,OACnB,IAAKA,EAAQ,OAAO,EADW,MAEJA,EAAOC,WAA3BS,EAFwB,EAExBA,SAASC,EAFe,EAEfA,QAGhB,MAAO,CACLC,KAAK,qBAAD,OAAuBF,EAAvB,+BAAsDC,EAAtD,aACJ3E,MAAM,CAEJ8C,SAAU,WAeV+B,YAAY,EACZC,OAAQ,CAAClB,EAAUW,EAAeX,EAAUU,GAN9C,SAQE,cAAC,IAAD,CACES,WAAS,EACTC,SAAWC,IAAQC,SACnBC,qBAtFgB,4FAuFhBC,qBAAmB,SC3EhBC,G,OAtBA,SAAC,GAAe,EAAd9G,SAIb,OACI,mCACH,qBAAKuF,GAAG,SAAS9D,MAAQ,CAAC6C,WAAW,sBAArC,SAKC,sBAAKf,UAAU,iBAAf,UAEF,mCAAK,qBAAKA,UAAU,SAAS9B,MAAO,CAACf,gBAAgB,QAAD,OAAUqE,EAAeE,SAAS8B,OAAlC,QAApD,8BACE,mCAAK,qBAAKxD,UAAU,SAAS9B,MAAO,CAACf,gBAAgB,QAAD,OAAUqE,EAAeG,YAAY6B,OAArC,QAApD,yBCMSC,MAff,WACE,IAAMhH,EAAYmD,aAAa,SAAAC,GAAK,OAAEA,EAAMpD,YAE5C,OACE,sBAAKuD,UAAU,MAAf,UAEE,cAAC,EAAD,CAAoBvD,SAAWA,IAC/B,cAAC,EAAD,IACA,cAAC,EAAD,CAASA,SAAWA,Q,kBClBtBiH,EAAe,CACfjH,SAAS,KCSb,IAAMkH,EAAQC,aDLC,WAAsD,IAArCC,EAAoC,uDAAtBH,EAAcI,EAAQ,uCAEhE,MAAqB,cAAdA,EAAOlD,KAAqB,CAACnE,SAAUqH,EAAOrH,UAAYoH,KCKrEE,IAASC,OACP,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.7e07c383.chunk.js","sourcesContent":["import react, {useState,useEffect} from 'react';\n\n\nconst useFetch = (query) => {\n    const [status, setStatus] = useState('idle');\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        if (!query) return;\n\n        const fetchData = async () => {\n            setStatus('fetching');\n            const response = await fetch(\n                `https://gsc-admin.carto.com/api/v2/sql?q=${encodeURIComponent(query)}`\n            );\n            const data = await response.json();\n            setData(data.rows.sort((a,b)=>a.district>b.district?1:-1));\n            setStatus('fetched');\n        };\n\n        fetchData();\n    }, [query]);\n\n    return { status, data};\n};\n\nexport default useFetch;\n\n\n","\nimport React, {useEffect,useState} from 'react';\nimport useFetch from './useFetch';\nimport { Bar } from \"react-chartjs-2\";\n\n\n\n\n\n\nconst buildQuery = (distance) =>{\n    return  `\n    select a.district,(a.total*100/gt.grand_total) as percentage\n    from \n    (select district, sum(dwelling) total  from \"gsc-admin\".ops_access  where distance <= ${distance}  group by district) a join\n    (select district,sum(dwelling) grand_total from \"gsc-admin\".ops_access  group by district) gt  on a.district = gt.district\n   `\n}\n\n\nconst CreateBarChart = ({data,options})=>{\n\n    return (\n        <div className=\"charts-card\">\n          <Bar\n            data={data}\n            options={options}\n          />\n        </div>\n    );\n};\n\n\nconst BarChart = ({distance}) => {\n\n    const myQuery = buildQuery(distance);\n    const {status, data} = useFetch(myQuery);\n    //console.log(data.map((elm)=> elm.percentage));\n\n\n   //https://stackoverflow.com/questions/43604597/how-to-customize-the-tooltip-of-a-chart-js-2-0-doughnut-chart\n\n\n\n\n    const chartData = {\n        labels : data.map((elm)=> elm.district),\n        datasets: [\n            {\n                label :'%',\n                data:data.map((elm)=> elm.percentage),\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.8)',\n                    'rgba(255, 159, 64, 0.8)',\n                    'rgba(255, 205, 86, 0.8)',\n                    'rgba(75, 192, 192, 0.8)',\n                    'rgba(54, 162, 235, 0.8)'\n                ],\n                borderColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(255, 159, 64)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(54, 162, 235)',\n                ],\n                borderWidth: 2\n\n            }\n        ]\n    };\n\n    const options = {\n        \n            indexAxis: 'y',\n            maintainAspectRatio: false,\n\n          \n            elements: {\n              bar: {\n                borderWidth: 2,\n              }\n            },\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'right',\n                display: false,\n              },\n              title: {\n                display: false,\n                text:`${distance} metres access to open space`\n              }\n            },\n            \n          \n    }\n    \n    return ( \n        <div style = {{height:'300px'}}>\n        <Bar data = {chartData} options ={options} />\n        </div>\n\n    )\n\n            \n            \n}\n   \n\nexport default BarChart;\n\n\n\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 280 + theme.spacing(3) * 2,\n   \n   \n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\n\nconst DistanceSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n    \n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\n\nexport default function CustomizedSlider() {\n  const classes = useStyles();\n  const distance = useSelector(state => state.distance);\n  const dispatch = useDispatch();\n  const updateDistance = (e, val) => {\n     \n      return dispatch(\n          {\n              type: 'new value',\n              distance: val//e.target.value\n          }\n      )\n  };\n\n  return (\n  \n    <div className={classes.root}>\n      \n      \n      <Typography gutterBottom>Select distance</Typography>\n      <DistanceSlider valueLabelDisplay=\"auto\" aria-label=\"distance slider\" \n      defaultValue={distance} min ={200} max= {1000} step = {200}  onChange={(e,val) => updateDistance(e,val)}/>\n      \n     \n      \n\n      \n    </div>\n   \n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BarChart   from './barChart';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport './RightBar.css';\nimport CustomizedSlider from './Slider';\n\n\n\n\nconst RightBar = () => {\n\n\n    const distance = useSelector(state => state.distance);\n    const dispatch = useDispatch();\n    const updateDistance = (e) => {\n        return dispatch(\n            {\n                type: 'new value',\n                distance: e.target.value\n            }\n        )\n    };\n\n    return (\n        <div className='layer-selector' style= {{fontFamily:\"Roboto, sans-serif\"}}>\n            \n            <CustomizedSlider />\n\n            <b>Dwellings(%) with {distance} metres of access to public open space</b>\n            \n            <BarChart distance ={distance} />\n            <div>\n                <span style ={{fontSize:'8px'}}>Source: GSC Analysis 2021, DPIE, ABS 2016</span>\n            </div>\n           \n        \n           \n\n        </div>\n    );\n};\n\n\n\nexport default RightBar;","import {CartoSQLLayer, setDefaultCredentials,BASEMAP} from '@deck.gl/carto';\nimport React, {useState, useCallback,useEffect} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\n\nconst INITIAL_VIEW_STATE = {\n    latitude: -33.842104,\n    longitude: 150.998914,\n    zoom:10\n  };\n\nsetDefaultCredentials({\nusername: 'gsc-admin',\napiKey: 'fFbU97TNhKdhIO4yYyFjdA'\n});\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYnNuYXlhbiIsImEiOiJja3Ewczd3MW4wN3Z3MnVvNDNsenlzNnFsIn0.f8nk8yrxIeCKOlzIy1b-Pg'\n\nexport const POLYGON_COLORS ={\n    COLOR_YES: [0,0,0,0],\n    COLOR_NO :[222,45,38],\n    COLOR_GREEN :[16,196,118]\n  }\n  \nconst OpenSpaceAccessMap = ({distance})=> {\n\n    const SQL_POLY = `\n  \n    select m.cartodb_id,m.mb_code16,m.the_geom_webmercator, a.dwelling, a.density,\n    case \n    when a.distance <${distance} then 'Yes'\n    else 'No'\n    end has_access\n    from \"gsc-admin\".meshblocks_mua m join \"gsc-admin\".ops_access a on a.mb_code16= m.mb_code16 where a.dwelling>0 and a.density>0\n  \n    `\n   \n     \n  \n    const layerMesh = new CartoSQLLayer({\n      id:'meshblock',\n      data: SQL_POLY,\n    \n      getFillColor: object => object.properties.has_access==='Yes'?POLYGON_COLORS.COLOR_YES: POLYGON_COLORS.COLOR_NO,\n      getLineColor: [0, 0, 0, 0],\n      lineWidthMinPixels: 0,\n      pickable: true,\n      \n    });\n\n    const layerDistrict = new CartoSQLLayer({\n      id:'district',\n      data: `select the_geom_webmercator, district from \"gsc-admin\".districtboundary `,\n    \n      getFillColor: [0,0,0,0],\n      getLineColor: [99,99,99,255],\n      lineWidthMinPixels: 1.2,\n      pickable: false,\n      \n    });\n\n    const layerOpenSpace = new CartoSQLLayer({\n      id:'openspace',\n      data: `select the_geom_webmercator from \"gsc-admin\".openspace_bis `,\n    \n      getFillColor:POLYGON_COLORS.COLOR_GREEN,\n      getLineColor: [0,0,0,0],\n      lineWidthMinPixels: 0,\n      pickable: false,\n      \n    });\n  \n    const getTooltip = ({object}) => {\n      if (!object) return false;\n      const {dwelling,density} = object.properties;\n      \n  \n      return {\n        html: `<div>dwelling(n): ${dwelling}</div><div>density: ${density}/ha</div>`,\n        style:{\n          \n          fontSize: '0.8em'\n         \n        }\n      }\n    };\n\n  \n    return (\n      <div>\n       \n        <DeckGL\n          width=\"100%\"\n          height=\"100%\"\n          initialViewState={INITIAL_VIEW_STATE}\n          getTooltip = {getTooltip}\n          controller={true}\n          layers={[layerMesh,layerOpenSpace,layerMesh,layerDistrict]}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle= {BASEMAP.POSITRON}//\"mapbox://styles/mapbox/dark-v9\"\n            mapboxApiAccessToken= {MAPBOX_ACCESS_TOKEN}\n            preventStyleDiffing\n          />\n        </DeckGL>\n      </div>\n    );\n  }\n\n\n  export default OpenSpaceAccessMap;","import React from 'react';\nimport { POLYGON_COLORS } from './OpenSpaceAccessMap';\nimport './Legend.css'\n\n\n\n\nconst Legend = ({distance}) => {\n\n   \n\n    return (\n        <>\n     <div id=\"legend\" style ={{fontFamily:\"Roboto, sans-serif\"}}>\n\n   \n      {/* <b>has public open space within {distance} metres?</b> */}\n     \n      <div className=\"legend-content\">\n          {/* <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_YES.join() })`}}></div>Yes</li> */}\n    <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_NO.join() })`}}></div>Meshblock without access</li>\n      <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_GREEN.join() })`}}></div>Open space</li>\n          \n      </div>\n    </div>\n        </>\n    )\n};\n\nexport default Legend;","import React from 'react';\n//import './App.css';\n\nimport RightBar  from './rightBar';\nimport OpenSpaceAccessMap from './OpenSpaceAccessMap';\nimport Legend from './Legend';\nimport { useSelector} from 'react-redux';\n\n\n\n\n\nfunction App() {\n  const distance  = useSelector( state=>state.distance);\n  \n  return (\n    <div className=\"App\">\n     \n      <OpenSpaceAccessMap distance ={distance} />\n      <RightBar />\n      <Legend  distance= {distance}/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","\n\nlet initialState = {\n    distance:400\n}\n\n\nexport default function reducer(currentState= initialState, action ){\n\n    return action.type==='new value' ? {distance :action.distance} : currentState\n\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers/reducer';\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}