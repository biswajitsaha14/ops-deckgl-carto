{"version":3,"sources":["useFetch.js","OpenSpaceAccessMap.js","barChart.js","Slider.js","rightBar.js","leftBar.js","Legend.js","App.js","reducers/reducer.js","index.js"],"names":["useFetch","query","useState","status","setStatus","data","setData","useEffect","a","fetch","encodeURIComponent","response","json","rows","sort","b","district","fetchData","INITIAL_VIEW_STATE","latitude","longitude","zoom","setDefaultCredentials","username","apiKey","POLYGON_COLORS","COLOR_YES","COLOR_NO","COLOR_GREEN","OpenSpaceAccessMap","distance","SQL_POLY","layerMesh","CartoSQLLayer","id","getFillColor","object","properties","has_access","getLineColor","lineWidthMinPixels","pickable","layerDistrict","layerOpenSpace","width","height","initialViewState","getTooltip","dwelling","density","html","style","fontSize","controller","layers","reuseMaps","mapStyle","BASEMAP","POSITRON","mapboxApiAccessToken","preventStyleDiffing","BarChart","myQuery","buildQuery","chartData","labels","map","elm","datasets","label","percentage","backgroundColor","join","borderColor","borderWidth","options","indexAxis","maintainAspectRatio","elements","bar","responsive","plugins","legend","position","display","title","text","useStyles","makeStyles","theme","root","spacing","margin","DistanceSlider","withStyles","color","thumb","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","classes","useSelector","state","dispatch","useDispatch","className","Typography","gutterBottom","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","e","val","type","updateDistance","RightBar","fontFamily","lineHeight","href","Legend","App","initialState","store","createStore","currentState","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb96b47a.chunk.js","sourcesContent":["import react, {useState,useEffect} from 'react';\n\n\nconst useFetch = (query) => {\n    const [status, setStatus] = useState('idle');\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        if (!query) return;\n\n        const fetchData = async () => {\n            setStatus('fetching');\n            const response = await fetch(\n                `https://gsc-admin.carto.com/api/v2/sql?q=${encodeURIComponent(query)}`\n            );\n            const data = await response.json();\n            setData(data.rows.sort((a,b)=>a.district>b.district?1:-1));\n            setStatus('fetched');\n        };\n\n        fetchData();\n    }, [query]);\n\n    return { status, data};\n};\n\nexport default useFetch;\n\n\n","import {CartoSQLLayer, setDefaultCredentials,BASEMAP} from '@deck.gl/carto';\nimport React, {useState, useCallback,useEffect} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\n\nconst INITIAL_VIEW_STATE = {\n    latitude: -33.842104,\n    longitude: 150.998914,\n    zoom:10\n  };\n\nsetDefaultCredentials({\nusername: 'gsc-admin',\napiKey: 'fFbU97TNhKdhIO4yYyFjdA'\n});\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYnNuYXlhbiIsImEiOiJja3Ewczd3MW4wN3Z3MnVvNDNsenlzNnFsIn0.f8nk8yrxIeCKOlzIy1b-Pg'\n\nexport const POLYGON_COLORS ={\n    COLOR_YES: [0,0,0,0],\n    COLOR_NO :[248,15,54],\n    COLOR_GREEN :[16,196,118]\n  }\n  \nconst OpenSpaceAccessMap = ({distance})=> {\n\n    const SQL_POLY = `\n  \n    select m.cartodb_id,m.mb_code16,m.the_geom_webmercator, a.dwelling, a.density,\n    case \n    when a.distance <${distance} then 'Yes'\n    else 'No'\n    end has_access\n    from \"gsc-admin\".meshblocks_mua m join \"gsc-admin\".ops_access a on a.mb_code16= m.mb_code16 where a.dwelling>0 and a.density>0\n  \n    `\n   \n     \n  \n    const layerMesh = new CartoSQLLayer({\n      id:'meshblock',\n      data: SQL_POLY,\n    \n      getFillColor: object => object.properties.has_access==='Yes'?POLYGON_COLORS.COLOR_YES: POLYGON_COLORS.COLOR_NO,\n      getLineColor: [0, 0, 0, 0],\n      lineWidthMinPixels: 0,\n      pickable: true,\n      \n    });\n\n    const layerDistrict = new CartoSQLLayer({\n      id:'district',\n      data: `select the_geom_webmercator, district from \"gsc-admin\".districtboundary `,\n    \n      getFillColor: [0,0,0,0],\n      getLineColor: [99,99,99,255],\n      lineWidthMinPixels: 1.2,\n      pickable: false,\n      \n    });\n\n    const layerOpenSpace = new CartoSQLLayer({\n      id:'openspace',\n      data: `select the_geom_webmercator from \"gsc-admin\".openspace_bis `,\n    \n      getFillColor:POLYGON_COLORS.COLOR_GREEN,\n      getLineColor: [0,0,0,0],\n      lineWidthMinPixels: 0,\n      pickable: false,\n      \n    });\n  \n    const getTooltip = ({object}) => {\n      if (!object) return false;\n      const {dwelling,density} = object.properties;\n      \n  \n      return {\n        html: `<div>dwelling(n): ${dwelling}</div><div>density: ${density}/ha</div>`,\n        style:{\n          \n          fontSize: '0.8em'\n         \n        }\n      }\n    };\n\n  \n    return (\n      <div>\n       \n        <DeckGL\n          width=\"100%\"\n          height=\"100%\"\n          initialViewState={INITIAL_VIEW_STATE}\n          getTooltip = {getTooltip}\n          controller={true}\n          layers={[layerMesh,layerOpenSpace,layerMesh,layerDistrict]}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle= {BASEMAP.POSITRON}//\"mapbox://styles/mapbox/dark-v9\"\n            mapboxApiAccessToken= {MAPBOX_ACCESS_TOKEN}\n            preventStyleDiffing\n          />\n        </DeckGL>\n      </div>\n    );\n  }\n\n\n  export default OpenSpaceAccessMap;","\nimport React, {useEffect,useState} from 'react';\nimport useFetch from './useFetch';\nimport { Bar } from \"react-chartjs-2\";\nimport { POLYGON_COLORS } from './OpenSpaceAccessMap';\n\n\n\n\n\n\nconst buildQuery = (distance) =>{\n    return  `\n    select a.district,(a.total*100/gt.grand_total) as percentage\n    from \n    (select district, sum(dwelling) total  from \"gsc-admin\".ops_access  where distance <= ${distance}  group by district) a join\n    (select district,sum(dwelling) grand_total from \"gsc-admin\".ops_access  group by district) gt  on a.district = gt.district\n   `\n}\n\n\nconst CreateBarChart = ({data,options})=>{\n\n    return (\n        <div className=\"charts-card\">\n          <Bar\n            data={data}\n            options={options}\n          />\n        </div>\n    );\n};\n\n\nconst BarChart = ({distance}) => {\n\n    const myQuery = buildQuery(distance);\n    const {status, data} = useFetch(myQuery);\n    //console.log(data.map((elm)=> elm.percentage));\n\n\n   //https://stackoverflow.com/questions/43604597/how-to-customize-the-tooltip-of-a-chart-js-2-0-doughnut-chart\n\n\n\n\n    const chartData = {\n        labels : data.map((elm)=> elm.district),\n        datasets: [\n            {\n                label :'%',\n                data:data.map((elm)=> 100.0-elm.percentage),\n                backgroundColor: `rgba(${ [...POLYGON_COLORS.COLOR_NO ,1].join() })`,\n              \n                borderColor: `rgb(${ POLYGON_COLORS.COLOR_NO.join() })`,\n                borderWidth: 0\n\n            }\n        ]\n    };\n\n    const options = {\n        \n            indexAxis: 'y',\n            maintainAspectRatio: false,\n\n            \n          \n            elements: {\n              bar: {\n                borderWidth: 1,\n              }\n            },\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'right',\n                display: false,\n              },\n              title: {\n                display: false,\n                text:`${distance} metres access to open space`\n              }\n            },\n            \n          \n    }\n    \n    return ( \n        <div style = {{height:'300px'}}>\n        <Bar data = {chartData} options ={options} />\n        </div>\n\n    )\n\n            \n            \n}\n   \n\nexport default BarChart;\n\n\n\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 280 + theme.spacing(3) * 2,\n   \n   \n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\n\nconst DistanceSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n    \n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\n\nexport default function CustomizedSlider() {\n  const classes = useStyles();\n  const distance = useSelector(state => state.distance);\n  const dispatch = useDispatch();\n  const updateDistance = (e, val) => {\n     \n      return dispatch(\n          {\n              type: 'new value',\n              distance: val//e.target.value\n          }\n      )\n  };\n\n  return (\n  \n    <div className={classes.root}>\n      \n      \n      <Typography gutterBottom>Select distance</Typography>\n      <DistanceSlider valueLabelDisplay=\"auto\" aria-label=\"distance slider\" \n      defaultValue={distance} min ={200} max= {1000} step = {200}  onChange={(e,val) => updateDistance(e,val)}/>\n      \n     \n      \n\n      \n    </div>\n   \n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BarChart   from './barChart';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport './RightBar.css';\nimport CustomizedSlider from './Slider';\n\n\n\n\nconst RightBar = () => {\n\n\n    const distance = useSelector(state => state.distance);\n    const dispatch = useDispatch();\n    const updateDistance = (e) => {\n        return dispatch(\n            {\n                type: 'new value',\n                distance: e.target.value\n            }\n        )\n    };\n\n    return (\n        <div className='layer-selector' style= {{fontFamily:\"Roboto, sans-serif\"}}>\n\n          \n            \n            <CustomizedSlider />\n\n            <b>% of dwellings that do not have access to public open space within {distance} metres</b>\n            \n            <BarChart distance ={distance} />\n            <div>\n                <span style ={{fontSize:'8px'}}>Source: GSC Analysis 2021, DPIE, ABS 2016</span>\n            </div>\n           \n        \n           \n\n        </div>\n    );\n};\n\n\n\nexport default RightBar;","import React from 'react';\n\nimport './LeftBar.css';\n\n\nconst RightBar = ()=>{\n\n    return (\n        <div className='info' style= {{fontFamily:\"Roboto, sans-serif\"}}>\n              <div>\n                <h3>Public open space accessibility</h3>\n                <p style={{fontSize:\"12px\", color:'gray',lineHeight:'1.5em'}}>\n                This access to public open space analysis utilises a walking distance along the road networks from the centroid of a mesh block to its nearest access point of the open spaces. If the centroid of the mesh block is within the desired distance of open space, the whole mesh block dwelling is considered to have access to open space.\n\n\n                </p>\n                <span style={{fontSize:\"10px\", color:'gray',lineHeight:'1.1em'}}>\n                Please contact <a href = \"mailto: data@gsc.nsw.gov.au\">data@gsc.nsw.gov.au</a> for more info\n                </span>\n            </div>\n\n        </div>\n    )\n}\n\nexport default RightBar;\n\n\n","import React from 'react';\nimport { POLYGON_COLORS } from './OpenSpaceAccessMap';\nimport './Legend.css'\n\n\n\n\nconst Legend = ({distance}) => {\n\n   \n\n    return (\n        <>\n     <div id=\"legend\" style ={{fontFamily:\"Roboto, sans-serif\"}}>\n\n   \n      {/* <b>has public open space within {distance} metres?</b> */}\n     \n      <div className=\"legend-content\">\n          {/* <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_YES.join() })`}}></div>Yes</li> */}\n    <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_NO.join() })`}}></div>Meshblock without access</li>\n      <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_GREEN.join() })`}}></div>Public open space</li>\n          \n      </div>\n    </div>\n        </>\n    )\n};\n\nexport default Legend;","import React from 'react';\n//import './App.css';\n\nimport RightBar  from './rightBar';\nimport LeftBar  from './leftBar';\nimport OpenSpaceAccessMap from './OpenSpaceAccessMap';\nimport Legend from './Legend';\nimport { useSelector} from 'react-redux';\n\n\n\n\n\nfunction App() {\n  const distance  = useSelector( state=>state.distance);\n  \n  return (\n    <div className=\"App\">\n     \n      <OpenSpaceAccessMap distance ={distance} />\n      <LeftBar />\n      <RightBar />\n      <Legend  distance= {distance}/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","\n\nlet initialState = {\n    distance:400\n}\n\n\nexport default function reducer(currentState= initialState, action ){\n\n    return action.type==='new value' ? {distance :action.distance} : currentState\n\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers/reducer';\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}